openapi: 3.0.0
info:
  title: TODO Management API
  description: API for managing users, tasks, and task assignments in a TODO application.
  version: 1.0.0

servers:
  - url: http://localhost:5000/api/v1
    description: Local server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          example: 400
        name:
          type: string
        message:
          type: string

    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        avatar:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    AuthResponse:
      type: object
      properties:
        token:
          type: string
          description: The JWT token for authenticated requests
        user:
          $ref: "#/components/schemas/User"
    Task:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        title:
          type: string
        duedate:
          type: string
          format: date
        status:
          type: string
          enum: [completed, pending]
        priority:
          type: string
          enum: [High, Medium, Low]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Assignment:
      type: object
      properties:
        id:
          type: string
        task_id:
          type: string
        user_id:
          type: string
        role:
          type: string
          enum: [assignee, viewer]

paths:
  /users:
    post:
      summary: Create a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request - Invalid user data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict - Email already in use
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /users/{userId}:
    get:
      summary: Get a user by ID
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /users/me:
    get:
      summary: Get authenticated user's profile and associated tasks
      description: Fetch the authenticated user's data along with tasks they created and assignments they are involved in (either as assignee or viewer).
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successfully retrieved user profile and tasks
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/Task"
                  assignedTasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/Assignment"
        "401":
          description: Unauthorized. Authentication is required to access this route.
        "500":
          description: Internal Server Error. Something went wrong while processing the request.

  /auth/login/local:
    post:
      summary: Login and get JWT token
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: User's email
                  example: "johndoe@example.com"
                password:
                  type: string
                  description: User's password
                  example: "password123"
      responses:
        "200":
          description: Successfully logged in and received token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: Bad Request - Missing email or password
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /tasks:
    get:
      summary: Get all tasks for the authenticated user
      tags:
        - Tasks
      # security:
      #   - bearerAuth: []
      responses:
        "200":
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Create a new task
      tags:
        - Tasks
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      responses:
        "201":
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Bad Request - Invalid task data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable Entity - Missing required fields
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /tasks/{taskId}:
    get:
      summary: Get a task by ID
      tags:
        - Tasks
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Task found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Delete a task
      tags:
        - Tasks
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "204":
          description: Task deleted successfully
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden - You do not have permission to delete this task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /assignments:
    get:
      summary: Get all task assignments
      tags:
        - Assignments
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of task assignments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Assignment"
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Assign a user to a task
      tags:
        - Assignments
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Assignment"
      responses:
        "201":
          description: Assignment created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assignment"
        "400":
          description: Bad Request - Invalid assignment data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict - User already assigned to this task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /assignments/{assignmentId}:
    get:
      summary: Get an assignment by ID
      tags:
        - Assignments
      parameters:
        - name: assignmentId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Assignment found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assignment"
        "404":
          description: Assignment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Delete an assignment
      tags:
        - Assignments
      parameters:
        - name: assignmentId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "204":
          description: Assignment deleted successfully
        "404":
          description: Assignment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden - You do not have permission to delete this assignment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
