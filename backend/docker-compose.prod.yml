services:
  backend:
    build:
      context: ./
      dockerfile: Dockerfile.prod
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGO_URL=mongodb://admin:pass@mongo:27017/unicode
      - CORS_ORIGIN=https://your-frontend-domain.com # Update with your frontend domain
    ports:
      - "5000:5000"
    networks:
      - app_network
    depends_on:
      mongo:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  mongo:
    image: mongo:latest
    command: mongod --auth
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=pass
      - MONGO_INITDB_DATABASE=unicode
    volumes:
      - mongo_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - app_network
    deploy:
      restart_policy:
        condition: any

networks:
  app_network:
    driver: bridge

volumes:
  mongo_data:
    driver: local
